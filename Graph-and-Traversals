# Graph-and-Traversals


Given an unweighted directed graph, try to find the shortest path from a start vertex to an end vertex and return its length. If the path doesn't exist, return -1.

Note: the vertices in the given graph are labeled from 0 to n-1 where n is the number of vertices.


Examples:
In the graph above,

length of the shortest path from vertex 0 to vertex 3 is 2 (0, 1, 3);

length of the shorted path from vertex 2 to vertex 5 is 1 (2, 5);

length of the shorted path from vertex 6 to vertex  0 is -1 (0 is unreachable from 6).

Input: the graph in adjacency list, the start vertex start, and the end vertex end;

Output: length of the shortest path from start to end and -1 if the path doesn't exist.
